#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright 2015-2019 CNRS-UM LIRMM, CNRS-AIST JRL
# Copyright 2020 ANYbotics AG
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import argparse
import os
import signal
import sys

from PySide2 import QtWidgets
from signal_logger_ui import SignalLoggerUI
from warnings import warn


def parse_args():
    default_logdir = os.path.expanduser("~") + "/.ros/"
    parser = argparse.ArgumentParser(description='Signal Logger UI')
    parser.add_argument('-d', '--logdir', default=default_logdir, help='directory where log files are looked up (default: ~/.ros)')
    parser.add_argument('fpath', type=str, help='name of log file', nargs='?', default='')
    return parser.parse_args()


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    gui = SignalLoggerUI()
    args = parse_args()
    gui.load_log(fpath=args.fpath, logdir=args.logdir)
    gui.show()

    def sigint_handler(*args):
        gui.close()

    signal.signal(signal.SIGINT, sigint_handler)
    sys.exit(app.exec_())
